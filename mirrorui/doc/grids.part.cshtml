<div class="doc-part-box" id="grid">
  <h2>册格系统</h2>
  <p>册格布局是bootstrap的经典,现在css已经自带了.可以直接使用自带的.</p>

  <style>
    .demo-grids {
      display: grid;
      grid-template-columns: repeat(12,8.3333%);
    }

    .demo-grid {
      background-color: var(--primary);
      padding: 5px;
      border: 1px solid #ffffff;
    }
  </style>
  <p>对div使用样式 {display:grid ; grid-template-columns: repeat(12,8.3333%);} 就实现了</p>
  <pre>
.demo-grids {
  display: grid;
  grid-template-columns: repeat(12,8.3333%);
}
</pre>
  <div class="demo-grids">
    @for (int i = 0; i < 12; i++)
    {
      <span class="demo-grid text-center">@(i + 1)</span>
    }
  </div>
  <br />
  <h3>册格便利类</h3>
  <p>为了使用方便,制做栅格便利类</p>
  <p class="article-title">.grids-n n=(1~12) 使用 display: grid 实现</p>
  <pre class="bg-gray">
.grids-n {
  <b>display: grid;</b>
  grid-template-columns: repeat(n, 1/n*100%);
  overflow: hidden;
}
</pre>
  <p>在div册格容器上使用样式 <b>.grids-7</b> 其下项目会自动均分1/7宽度</p>
  <div class="grids-7 mg-tb-10">
    @for (int i = 0; i < 7; i++)
    {
      <span class="demo-grid text-center bg-successse">@(i + 1) / 7</span>
    }
  </div>
  <p>grids-n支持屏幕尺寸便利类</p>
  <p><b>grids-sm-2</b> 在屏幕宽度大于576px时,其下项目均分为2</p>
  <p><b>grids-md-3</b> 在屏幕宽度大于768px时,其下项目均分为3</p>
  <p><b>grids-lg-4</b> 在屏幕宽度大于992px时,其下项目均分为4</p>
  <p><b>grids-xl-5</b> 在屏幕宽度大于1200px时,其下项目均分为5</p>
  <p class="article-title">.grids .grid 使用 display: flex 实现</p>
  <p>在div册格容器上使用样式 <b>.grids</b>, 同时在其下项目上使用样式 <b>.grid</b> ,则项目自动根据个数均分宽度</p>
  <div class="grids">
    @for (int i = 0; i < 9; i++)
    {
      <span class="grid demo-grid text-center">@(i + 1) / 9</span>
    }
  </div>
  <br />
  <p>在div册格的项目元素上使用样式 .grid-n n=(1~12) 则项目占比n/12</p>
  <div class="grids">
    <span class="grid-3 demo-grid text-center">grid-3</span>
    <span class="grid-4 demo-grid text-center">grid-4</span>
    <span class="grid-5 demo-grid text-center">grid-5</span>
  </div>
  <br />
  <p>在div册格的项目元素上混合使用样式 .grid和.grid-n,其中grid-n占用指定宽度,grid则均分剩于空间</p>
  <div class="grids">
    <div class="grid demo-grid text-center">均分</div>
    <div class="grid-5 demo-grid text-center">固定占grid-5</div>
    <div class="grid demo-grid text-center">均分</div>
    <div class="grid demo-grid text-center">均分</div>
  </div>
  <br />
  <p>grids支持屏幕尺寸便利类,在项grid上使用样式.</p>
  <p><b>grid-sm-8</b> 在屏幕宽度大于576px时,占比8/12</p>
  <p><b>grid-md-6</b> 在屏幕宽度大于768px时,占比6/12</p>
  <p><b>grid-lg-4</b> 在屏幕宽度大于992px时,占比4/12</p>
  <p><b>grid-xl-3</b> 在屏幕宽度大于1200px时,占比3/12</p>
  <div class="grids">
    <div class="grid-12 demo-grid grid-sm-8 grid-md-6 grid-lg-4 grid-xl-3">grid-sm-8 grid-md-6 grid-lg-4 grid-xl-3</div>
  </div>
  <p class="article-title">便利grids类使用的是flex布局.需要注意一种情况,display:flex会对其子元素大小产生影响.例如:</p>
  <pre>
&lt;div class="grids"&gt;
  <b>&lt;span class="grid-2"&gt;背景图片&lt;/span&gt;</b>
    &lt;span class="grid-8"&gt;&lt;/h3&gt;
    &lt;span class="grid-2"&gt;&lt;/span&gt;
&lt;/div&gt;
</pre>
  <p>栅格的第一个span,是设置有背景图片的.display:inline-block;width:48px;height:48px;大小48X48,但是放在</p>
  <p>grid栅格容器里,大小不是48X48了,(图片走样了),受到flex父元素影响.可以在span上设置如下css解决:</p>
  <pre>
  <b>background-size:contain;</b>
</pre>
</div>